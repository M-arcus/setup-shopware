name: 'Setup Shopware 6'
description: 'Install Shopware 6 with specific versions in your CI'
author: 'FriendsOfShopware'
branding:
  color: 'blue'
  icon: 'download'
inputs:
  env:
    description: 'Environment for Shopware'
    required: true
    default: 'test'
  shopware-version:
    description: 'Shopware Version to use'
    required: true
    default: 'v6.5.7.3'
  php-version:
    description: 'PHP Version to use'
    required: true
    default: '8.1'
  php-extensions:
    description: 'PHP extensions to install'
    required: true
    default: 'pcov'
  install:
    description: 'Install Shopware'
    required: true
    default: 'false'
  install-locale:
    description: 'Locale to install'
    required: true
    default: 'en-GB'
  install-currency:
    description: 'Currency to install'
    required: true
    default: 'EUR'
  composer-packages:
    description: 'Additional composer packages'
    required: false
    default: ''
  keep-composer-tools:
    description: 'Keep Shopware Composer tools (PHPStan, ECS, BC-Checker)'
    required: true
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Clone Shopware
      uses: actions/checkout@v4
      with:
        repository: "shopware/shopware"
        ref: ${{ inputs.shopware-version }}

    - name: Remove vendor-bin
      if: inputs.keep-composer-tools == 'false'
      shell: bash
      run: rm -rf vendor-bin
        
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ inputs.php-version }}
        extensions: ${{ inputs.php-extensions }}
    
    - name: Start MySQL
      shell: bash
      run: |
        sudo mv /var/lib/mysql /var/lib/mysql-old
        sudo mkdir /var/lib/mysql
        sudo mount -t tmpfs tmpfs /var/lib/mysql -o size=1G
        sudo -u mysql mysqld --datadir=/var/lib/mysql --default-time-zone=SYSTEM --initialize-insecure
        sudo systemctl start mysql

    - name: Setup Shopware Environment Variables
      shell: bash
      run: |
        echo "APP_ENV=${{ inputs.env }}" >> "$GITHUB_ENV"
        echo "APP_SECRET=secret" >> "$GITHUB_ENV"
        echo "APP_URL=http://localhost:8000" >> "$GITHUB_ENV"
        echo "DATABASE_URL=mysql://root@localhost/shopware" >> "$GITHUB_ENV"

    - name: Retrieve the cached "vendor" directory (if present)
      uses: actions/cache@v3
      id: composer-cache
      with:
        path: vendor
        key: ${{ runner.os }}-shopware-setup-composer-${{ inputs.shopware-version }}-${{ inputs.php-version }}
    
    - name: Install dependencies
      if: steps.composer-cache.outputs.cache-hit != 'true'
      shell: bash
      run: composer install

    - name: Install additional dependencies
      if: ${{ inputs.composer-packages }} != ''
      shell: bash
      run: |
        composer require ${{ inputs.composer-packages }}

    - name: Install Shopware
      if: inputs.install == 'true'
      shell: bash
      run: bin/console system:install --create-database --drop-database --basic-setup --force --shop-locale=${{ inputs.install-locale }} --shop-currency=${{ inputs.install-currency }}
